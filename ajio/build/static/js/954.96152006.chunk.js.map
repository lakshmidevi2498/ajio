{"version":3,"file":"static/js/954.96152006.chunk.js","mappings":"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","sources":["redux/actions/mobileLoginAction.js","components/OtpComponent.js","redux/apis/mobileLoginApi.js"],"sourcesContent":["import * as types from './actionTypes'\r\nimport { mobileLoginApi } from '../apis/mobileLoginApi';\r\n\r\nexport const mobileLoginStart= () => ({\r\ntype:types.MOBILE_LOGIN_START\r\n})\r\n\r\nexport const mobileLoginSuccess = (data) => (\r\n    {\r\n    type:types.MOBILE_LOGIN_SUCCESS,\r\n    payload:data\r\n}\r\n\r\n)\r\n\r\nexport const resetMobileData = () => ({\r\n  type: types.RESET_MOBILE_DATA\r\n});\r\n\r\nexport const mobileLoginError = (error) => (\r\n    {\r\n    type:types.MOBILE_LOGIN_ERROR,\r\n    payload:error\r\n})\r\n\r\nexport const mobileLoginInitiate = (phoneNumber,providerId,uId) => {\r\n    return async (dispatch)=>{\r\n        dispatch(mobileLoginStart())\r\n        try {\r\n          const mobileLogindata = await mobileLoginApi(phoneNumber,providerId,uId)\r\n          console.log(\"mobileLogindata\",mobileLogindata)\r\n          dispatch(mobileLoginSuccess(mobileLogindata))\r\n  \r\n        } catch (err) {\r\n          console.log(\"error\",err)\r\n          dispatch(mobileLoginError(err))\r\n  \r\n        }\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { Modal, Grid, Typography, TextField, Button } from \"@mui/material\"; \r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { mobileLoginInitiate } from \"../redux/actions/mobileLoginAction\";\r\nimport { getToken } from \"./GlobalFunction\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"100%\",\r\n    maxWidth: { md: \"800px\", lg: \"380px\", xxl: \"1200px\" },\r\n    height: \"auto\",\r\n    maxHeight: \"90vh\",\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid lightgray\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n    overflowY: \"auto\",\r\n};\r\n\r\nconst OtpComponent = ({ setModalOpen, modalOpen, phoneNumber,setOpen }) => {\r\n    const [otp, setOtp] = useState(Array(6).fill(\"\")); \r\n    const dispatch = useDispatch()\r\n    const token = getToken()\r\n   \r\n\r\n    const handleChange = (value, index) => {\r\n        const newOtp = [...otp];\r\n        newOtp[index] = value.slice(0, 1); \r\n        setOtp(newOtp);\r\n\r\n       \r\n        if (value && index < otp.length - 1) {\r\n            const nextField = document.getElementById(`otp-${index + 1}`);\r\n            if (nextField) nextField.focus();\r\n        }\r\n    };\r\n\r\n    const handleVerifyOtp = async () => {\r\n        const otpCode = otp.join(\"\");\r\n        if (!otpCode || otpCode.length < otp.length) {\r\n            alert(\"Please enter the complete OTP\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const user = await verifyOTP(otpCode);\r\n            toast.success(`Phone number verified! Welcome ${user.phoneNumber}`); \r\n            setModalOpen(false)\r\n            setOpen(false) \r\n        } catch (error) {\r\n            console.error(\"Error verifying OTP:\", error);\r\n            alert(\"An error occurred. Please try again later.\");\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setModalOpen(false);\r\n    };\r\n\r\n    const verifyOTP = async (otp) => {\r\n        try {\r\n          const confirmationResult = window.confirmationResult;\r\n          const result = await confirmationResult.confirm(otp);\r\n          const user = result.user;\r\n          console.log(\"User signed in successfully:\", user);\r\n          const phoneNumber = user.phoneNumber\r\n          const providerId = user.providerId   \r\n          const uId = user.providerData[0].uid \r\n          console.log(\"uId\",uId)  \r\n          if(!token){     \r\n          await  dispatch(mobileLoginInitiate(phoneNumber,providerId,uId))\r\n          }\r\n          return user;\r\n        } catch (error) {\r\n          console.error(\"Error verifying OTP:\", error);\r\n          throw error;\r\n        }\r\n      };\r\n      \r\n\r\n    return (\r\n        <Modal\r\n            open={modalOpen}\r\n            onClose={handleClose}\r\n            sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n            }}\r\n        >\r\n            <Grid container sx={style}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"body1\" gutterBottom>\r\n                        Enter the OTP sent to  {phoneNumber}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{ display: \"flex\", justifyContent: \"center\", gap: \"10px\" }}\r\n                    my={5}\r\n                >\r\n                    {otp.map((digit, index) => (\r\n                        <TextField\r\n                            key={index}\r\n                            id={`otp-${index}`}\r\n                            variant=\"outlined\"\r\n                            value={digit}\r\n                            onChange={(e) => handleChange(e.target.value, index)}\r\n                            inputProps={{\r\n                                maxLength: 1,\r\n                                style: { textAlign: \"center\", fontSize: \"18px\" },\r\n                            }}\r\n                            style={{ width: \"40px\" }}\r\n                        />\r\n                    ))}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                        onClick={handleVerifyOtp}\r\n                        sx={{ backgroundColor: \"#866528\", color: \"white\" }}\r\n                    >\r\n                        Start Shopping\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default OtpComponent;\r\n","import API from \"../../API/API\";\r\nconst api = new API();\r\nconst endPoints = \"sent-otp\";\r\nexport const mobileLoginApi = async (phoneNumber,providerId,uId) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n    \r\n      const response = await api.post(`${endPoints}`,{phoneNumber,providerId,uId});\r\n    \r\n      resolve(response);\r\n   \r\n    } catch (error) {\r\n      console.error(\"Error in mobileLoginApi:\", error);\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n"],"names":["mobileLoginInitiate","phoneNumber","providerId","uId","async","dispatch","type","types","mobileLogindata","mobileLoginApi","console","log","data","payload","err","error","style","position","top","left","transform","width","maxWidth","md","lg","xxl","height","maxHeight","bgcolor","border","boxShadow","p","overflowY","_ref","setModalOpen","modalOpen","setOpen","otp","setOtp","useState","Array","fill","useDispatch","token","getToken","verifyOTP","confirmationResult","window","user","confirm","providerData","uid","_jsx","Modal","open","onClose","handleClose","sx","display","alignItems","justifyContent","children","_jsxs","Grid","container","item","xs","Typography","variant","gutterBottom","gap","my","map","digit","index","TextField","id","concat","value","onChange","e","handleChange","newOtp","slice","length","nextField","document","getElementById","focus","target","inputProps","maxLength","textAlign","fontSize","Button","fullWidth","onClick","otpCode","join","alert","toast","success","backgroundColor","color","api","API","Promise","resolve","reject","post"],"sourceRoot":""}