{"version":3,"file":"static/js/316.ed0b228e.chunk.js","mappings":"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","sources":["redux/apis/deleteWishlistApi.js","redux/actions/deleteWishlistAction.js","components/WishlisteComponentOne.js","components/WishlistComponent.js","pages/WishlistPage.js","redux/apis/loadCartApi.js","redux/actions/loadCartAction.js","redux/apis/loadWishlistApi.js","redux/actions/loadWishlistAction.js","redux/apis/postCartApi.js","redux/actions/postCartAction.js"],"sourcesContent":["import API from \"../../API/API\";\r\nconst api = new API();\r\nconst endPoints = \"wishlist\";\r\nexport const deleteWishlistApi = async (userId,productId ) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n\r\n      const response = await api.delete(`${endPoints}/${userId}/${productId}`\r\n      );\r\n      resolve(response);\r\n   \r\n    } catch (error) {\r\n      console.error(\"Error in deleteWishlistApi:\", error);\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n","import * as types from './actionTypes'\r\nimport { deleteWishlistApi } from '../apis/deleteWishlistApi'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const deleteWishlistStart= () => ({\r\ntype:types.WISHLIST_DELETE_START\r\n})\r\n\r\nexport const deleteWishlistSuccess = (data) => (\r\n    {\r\n    type:types.WISHLIST_DELETE_SUCCESS,\r\n    payload:data\r\n})\r\n\r\nexport const deleteWishlistError = (error) => (\r\n    {\r\n    type:types.WISHLIST_DELETE_ERROR,\r\n    payload:error\r\n})\r\n\r\nexport const deleteWishlistInitiate = (userId,productId) => {\r\n    return async (dispatch)=>{\r\n        dispatch(deleteWishlistStart())\r\n        try {\r\n          const deleteWishlistdata = await deleteWishlistApi(userId,productId)\r\n          dispatch(deleteWishlistSuccess(deleteWishlistdata))\r\n  \r\n        } catch (err) {\r\n          console.log(\"error\",err)\r\n          dispatch(deleteWishlistError(err))\r\n          toast.error(\"getting products data failed\")\r\n  \r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport Controls from '../commons/Controls'\r\nimport theme from '../utilities/theme'\r\n\r\nconst WishlisteComponentOne = ({product,isCartProduct,handleDeleteFormWishlist,handleAddToBag}) => {\r\n  return (\r\n    <>\r\n      <Controls.Grid\r\n          container  \r\n          justifyContent=\"center\" mt={.5}\r\n          sx={{ }}  xs={10.5} sm={11} md={9.5} xl={9.5} spacing={1}\r\n        >\r\n          {product?.length > 0 ? (\r\n            product?.map((item, index) => (\r\n              <Controls.Grid\r\n                item\r\n                key={index}\r\n                xs={12} \r\n                sm={4}  \r\n                md={3}  \r\n                sx={{ display: {xs:\"block\",sm:\"block\"}, justifyContent: \"center\",height:\"auto\", }}gap={1}\r\n              >\r\n                <Controls.Box\r\n                  sx={{\r\n                    position: \"relative\",\r\n                    width:\"100%\",\r\n                    height:\"70%\",\r\n                    boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\", \r\n                  }}\r\n                >\r\n                \r\n                  <Controls.CardMedia\r\n                    component=\"img\"\r\n                    src={item.image}\r\n                    loading='lazy'\r\n                    alt=\"wishlist image\"\r\n                    sx={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      objectFit: \"cover\", \r\n                    }}\r\n                  />\r\n\r\n                  \r\n                  <Controls.DeleteOutlineIcon\r\n                    sx={{\r\n                      position: \"absolute\",\r\n                      top: 8,\r\n                      right: 8,\r\n                      width: \"25px\",\r\n                      height: \"25px\",\r\n                      zIndex: 10,\r\n                      color: \"gray\",\r\n                      cursor: \"pointer\",\r\n                    }} onClick ={()=>handleDeleteFormWishlist(item._id)}\r\n                  />\r\n\r\n                  {isCartProduct(item._id) ? (\r\n                  \"\"\r\n\r\n                  ) :  <Controls.Grid\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    bottom: 8,\r\n                    left: 8,\r\n                    width: \"30px\",\r\n                    height: \"30px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    backgroundColor: \"#f7d32f\",\r\n                    borderRadius: \"50%\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  <Controls.ShoppingBagOutlinedIcon\r\n                    sx={{\r\n                      width: \"20px\",\r\n                      height: \"20px\",\r\n                      color: \"gray\",\r\n                    }} onClick={()=>handleAddToBag(item._id)}\r\n                  />\r\n                </Controls.Grid>} \r\n                  \r\n                </Controls.Box>\r\n\r\n              \r\n                <Controls.CardContent sx={{ textAlign: \"center\", mt: 1 ,p:0}}>\r\n                    <Controls.Grid item>\r\n                  <Controls.Typography\r\n                    variant=\"caption1\"\r\n                    sx={{ color: theme.palette.one.text2, fontWeight: \"bold\" }}\r\n                  >\r\n                    {item.brandname}\r\n                  </Controls.Typography>\r\n                  </Controls.Grid>\r\n                  <Controls.Grid item>\r\n                  <Controls.Typography\r\n                    variant=\"caption1\"\r\n                    sx={{ fontSize: \"14px\", mt: 1 }}\r\n                  >\r\n                    {item.name}\r\n                  </Controls.Typography>\r\n                  </Controls.Grid>\r\n                  <Controls.Typography variant=\"caption1\" sx={{ fontWeight: \"bold\" }}>\r\n                    ₹{item.getitprice}\r\n                  </Controls.Typography>&nbsp;\r\n                  {item.discountOne && (\r\n                    <>\r\n                      <Controls.Typography\r\n                        variant=\"caption1\"\r\n                        sx={{\r\n                          textDecoration: \"line-through\",\r\n                          color: \"gray\",\r\n                          fontSize: \"13px\",\r\n                        }}\r\n                      >\r\n                        ₹{item.discountOne}\r\n                      </Controls.Typography>\r\n                      <Controls.Typography\r\n                        variant=\"caption1\"\r\n                        sx={{ color: \"#866528\", fontSize: \"13px\" }}\r\n                      >\r\n                        {item.discountTwo}\r\n                      </Controls.Typography>\r\n                    </>\r\n                  )}\r\n                </Controls.CardContent>\r\n              </Controls.Grid>\r\n            ))\r\n          ) : (\r\n            <>\r\n            <Controls.Box component=\"img\" src=\"./assets/images/Animation - 1730963748748.gif\" sx={{width:\"300px\",height:\"300px\"}}/>\r\n            <Controls.Grid item sx={{ textAlign: \"center\" }} xs={12}>\r\n                                    <Controls.Typography\r\n                                        variant=\"text1\"\r\n                                        sx={{ fontSize: { xs: \"20px\", sm: \"30px\" } }}\r\n                                    >\r\n                                        Your Wishlist is empty\r\n                                    </Controls.Typography>\r\n                                </Controls.Grid>\r\n                                </>\r\n        \r\n          )}\r\n        </Controls.Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WishlisteComponentOne","import React, { useState, useEffect } from \"react\";\r\nimport Controls from \"../commons/Controls\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadWishlistInitiate } from \"../redux/actions/loadWishlistAction\";\r\nimport { getToken, getUserId } from \"./GlobalFunction\"; \r\nimport { postCartInitiate } from \"../redux/actions/postCartAction\";\r\nimport { deleteWishlistInitiate } from \"../redux/actions/deleteWishlistAction\";\r\nimport { loadCartInitiate } from \"../redux/actions/loadCartAction\";\r\nimport WishlisteComponentOne from \"./WishlisteComponentOne\";\r\n\r\nconst WishlistComponent = () => {\r\n  const [product, setProduct] = useState([]);\r\n  const [cartProduct, setCartProduct] = useState([]);\r\n  const userId = getUserId();\r\n  const token = getToken()\r\n  const dispatch = useDispatch();\r\n  const wishlistData = useSelector((state) => state.loadwishlist.data);\r\n    const cartData = useSelector((state) => state.loadcartproducts.data || [])\r\n\r\n  useEffect(() => {\r\n    const fetchWishlist = async () => {\r\n      if(userId){\r\n      dispatch(loadWishlistInitiate(userId));\r\n      }\r\n    };\r\n    fetchWishlist();\r\n  }, [dispatch, userId]);\r\n\r\n    useEffect(() => {\r\n      const fetchCart = async () => {\r\n        if(userId){\r\n          dispatch(loadCartInitiate(token, userId))\r\n        }\r\n      }\r\n      fetchCart()\r\n    }, [dispatch,userId,token])\r\n\r\n  useEffect(() => {\r\n    if (wishlistData && wishlistData.data) {\r\n      const data = wishlistData.data?.wishlistData;\r\n      if (data && data.products) {\r\n        setProduct(data.products);\r\n      }\r\n    }\r\n  }, [wishlistData]);\r\n\r\n    useEffect(() => {\r\n      if (cartData && cartData.data) {\r\n        const data = cartData.data.cartDetails;\r\n        if (data && data.products) {\r\n          setCartProduct(data.products);\r\n          console.log(\"productsData\", data.products);\r\n        }\r\n      }\r\n    }, [cartData]);\r\n    \r\n  const isCartProduct = (productId) => {\r\n    console.log(\"productId isCartProduct:\", productId);\r\n    console.log(\"product array:\", cartProduct);\r\n\r\n    if (userId && token) {\r\n        return Array.isArray(cartProduct) && cartProduct.some((item) => item.product?._id === productId);\r\n    }\r\n    return false; \r\n};\r\n\r\n  const handleDeleteFormWishlist = async (productId) => {\r\n    console.log(\"userId,productId\",userId,productId)\r\n    await dispatch(deleteWishlistInitiate(userId,productId))\r\n    dispatch(loadWishlistInitiate(userId))\r\n\r\n  }\r\n\r\n  const handleAddToBag = async (productId) => {\r\n    const size = \"S\"\r\n await  dispatch(postCartInitiate(userId ,productId,size))\r\n await dispatch(loadCartInitiate(token,userId))\r\n await   dispatch(loadWishlistInitiate(userId))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Controls.Grid container justifyContent=\"center\">\r\n        \r\n        <Controls.Grid item xs={12} sm={11} md={9.5} xl={10}sx={{ textAlign: \"center\", mt: {xs:11,md:12,lg:15,xl:20 }}}>\r\n          <Controls.Typography\r\n            variant=\"caption1\"\r\n            sx={{\r\n              fontWeight: \"bold\",\r\n              fontSize: {xs:\"18px\",sm:\"25px\"},\r\n              display:product.length>0 ?\"block\" :\"none\"\r\n            }}\r\n          >\r\n            My Wishlist\r\n          </Controls.Typography>\r\n        </Controls.Grid>\r\n\r\n    \r\n      <WishlisteComponentOne product={product}isCartProduct={isCartProduct}handleDeleteFormWishlist={handleDeleteFormWishlist}handleAddToBag={handleAddToBag} />\r\n      </Controls.Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WishlistComponent;\r\n","import React from 'react'\r\nimport WishlistComponent from '../components/WishlistComponent'\r\nimport MainNavbarComponent from '../components/Navbar/MainNavbarComponent'\r\n\r\nconst WishlistPage = () => {\r\n  return (\r\n    <>\r\n    <MainNavbarComponent   value1={\"none\"}  value2={\"block\"} value3={\"none\"} value4={\"flex\"} value8={ { xs: \"130px\", sm: \"75px\", md: \"90px\", }}/>\r\n    <WishlistComponent/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WishlistPage","import API from \"../../API/API\";\r\nconst api = new API();\r\nconst endPoints = \"cart\";\r\nexport const loadCartApi = async (token, userId) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n\r\n      const response = await api.get(`${endPoints}/${userId}`,{\r\n        headers:{\r\n          authorization:`Bearer ${token}`,\r\n        }\r\n      });\r\n      resolve(response);\r\n   \r\n    } catch (error) {\r\n      console.error(\"Error in loadCartApi:\", error);\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n","import * as types from './actionTypes'\r\nimport { loadCartApi } from '../apis/loadCartApi'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const loadCartStart= () => ({\r\ntype:types.CART_LOAD_START\r\n})\r\n\r\nexport const loadCartSuccess = (data) => (\r\n    {\r\n    type:types.CART_LOAD_SUCCESS,\r\n    payload:data\r\n})\r\n\r\nexport const loadCartError = (error) => (\r\n    {\r\n    type:types.CART_LOAD_ERROR,\r\n    payload:error\r\n})\r\n\r\nexport const loadCartInitiate = (token,userId) => {\r\n    return async (dispatch)=>{\r\n        dispatch(loadCartStart())\r\n        try {\r\n          const loadCartdata = await loadCartApi(token,userId)\r\n          dispatch(loadCartSuccess(loadCartdata))\r\n  \r\n        } catch (err) {\r\n          console.log(\"error\",err)\r\n          dispatch(loadCartError(err))\r\n          toast.error(\"getting products data failed\")\r\n  \r\n        }\r\n    }\r\n}","import API from \"../../API/API\";\r\nconst api = new API();\r\nconst endPoints = \"wishlist\";\r\nexport const loadWishlistApi = async (userId) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n  \r\n      const response = await api.get(`${endPoints}/${userId}`\r\n      );\r\n      resolve(response);\r\n   \r\n    } catch (error) {\r\n      console.error(\"Error in loadCartApi:\", error);\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n","import * as types from './actionTypes'\r\nimport { loadWishlistApi } from '../apis/loadWishlistApi'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const loadWishlistStart= () => ({\r\ntype:types.WISHLIST_LOAD_START\r\n})\r\n\r\nexport const loadWishlistSuccess = (data) => (\r\n    {\r\n    type:types.WISHLIST_LOAD_SUCCESS,\r\n    payload:data\r\n})\r\n\r\nexport const loadWishlistError = (error) => (\r\n    {\r\n    type:types.WISHLIST_LOAD_ERROR,\r\n    payload:error\r\n})\r\n\r\nexport const loadWishlistInitiate = (userId) => {\r\n    return async (dispatch)=>{\r\n        dispatch(loadWishlistStart())\r\n        try {\r\n          const loadWishlistdata = await loadWishlistApi(userId)\r\n          dispatch(loadWishlistSuccess(loadWishlistdata))\r\n  \r\n        } catch (err) {\r\n          console.log(\"error\",err)\r\n          dispatch(loadWishlistError(err))\r\n          toast.error(\"getting wishlist data failed\")\r\n  \r\n        }\r\n    }\r\n}","import API from \"../../API/API\";\r\nconst api = new API();\r\nconst endPoints = \"cart\";\r\nexport const postCartApi = async (userId,productId,size) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n\r\n      const response = await api.post(`${endPoints}/${userId}/${productId}`,{\r\n        size \r\n      });\r\n\r\n      resolve(response);\r\n   \r\n    } catch (error) {\r\n      console.error(\"Error in postCartApi:\", error);\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n","import * as types from './actionTypes'\r\nimport {postCartApi} from '../apis/postCartApi'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const postCartStart= () => ({\r\ntype:types.CART_POST_START\r\n})\r\n\r\nexport const postCartSuccess = (data) => (\r\n    {\r\n    type:types.CART_POST_SUCCESS,\r\n    payload:data\r\n})\r\n\r\nexport const postCartError = (error) => (\r\n    {\r\n    type:types.CART_POST_ERROR,\r\n    payload:error\r\n})\r\n\r\nexport const postCartInitiate = (userId,productId,size) => {\r\n    return async (dispatch)=>{\r\n        dispatch(postCartStart())\r\n        try {\r\n          const postCartdata = await postCartApi(userId,productId,size)\r\n          dispatch(postCartSuccess(postCartdata)) \r\n  \r\n        } catch (err) {\r\n          console.log(\"error\",err)\r\n          dispatch(postCartError(err))\r\n          toast.error(\"getting products data failed\")\r\n  \r\n        }\r\n    }\r\n}"],"names":["api","API","deleteWishlistInitiate","userId","productId","async","dispatch","type","types","deleteWishlistdata","Promise","resolve","reject","delete","concat","error","console","deleteWishlistApi","data","payload","err","log","toast","_ref","product","isCartProduct","handleDeleteFormWishlist","handleAddToBag","_jsx","_Fragment","children","Controls","Grid","container","justifyContent","mt","sx","xs","sm","md","xl","spacing","length","map","item","index","_jsxs","display","height","gap","Box","position","width","boxShadow","CardMedia","component","src","image","loading","alt","objectFit","DeleteOutlineIcon","top","right","zIndex","color","cursor","onClick","_id","bottom","left","alignItems","backgroundColor","borderRadius","ShoppingBagOutlinedIcon","CardContent","textAlign","p","Typography","variant","theme","palette","one","text2","fontWeight","brandname","fontSize","name","getitprice","discountOne","textDecoration","discountTwo","WishlistComponent","setProduct","useState","cartProduct","setCartProduct","getUserId","token","getToken","useDispatch","wishlistData","useSelector","state","loadwishlist","cartData","loadcartproducts","useEffect","loadWishlistInitiate","fetchWishlist","loadCartInitiate","fetchCart","_wishlistData$data","products","cartDetails","lg","WishlisteComponentOne","Array","isArray","some","_item$product","postCartInitiate","WishlistPage","MainNavbarComponent","value1","value2","value3","value4","value8","loadCartdata","get","headers","authorization","loadCartApi","loadWishlistdata","loadWishlistApi","size","postCartdata","post","postCartApi"],"sourceRoot":""}